---
import ModalPage from '@layouts/ModalPage.astro';
import { PageSchema } from '@schemas/PageSchema';
import { SiteSchema } from '@schemas/SiteSchema';
import DeletePageView from '@svelte/sites/DeletePageView.svelte';
import { t } from '@utils/i18n';

interface Props {
  siteKey: string;
  pageKey: string;
}

const { siteKey, pageKey } = Astro.params;

// Fetch site data from the api
const siteResponse = await fetch(`${Astro.url.origin}/api/sites/${siteKey}`);
// Fetch page data from the api
const pageResponse = await fetch(
  `${Astro.url.origin}/api/sites/${siteKey}/pages/${pageKey}.json`,
);

if (!siteResponse.ok || !pageResponse.ok) {
  // If the site or page is not found, redirect to the 404 page
  return Astro.redirect('/404');
}

// Site and page data come from the API - so we can expect them to be
// in the correct format for the client apps.
const site = SiteSchema.parse(await siteResponse.json());
const page = PageSchema.parse(await pageResponse.json());

const title = `${t('actions:delete')} â€“ ${page.name}`;
---
<ModalPage title={title}>
  <DeletePageView {site} {page} client:only="svelte"/>
</ModalPage>
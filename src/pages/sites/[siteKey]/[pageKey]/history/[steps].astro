---
import { PageSchema } from '@schemas/PageSchema';
import { SiteSchema } from '@schemas/SiteSchema';
import PageHistorySidebar from '@server/SiteApp/HistoryApp/PageHistorySidebar.astro';
import SiteTray from '@server/SiteApp/SiteTray.astro';
import BackgroundPoster from '@server/ui/BackgroundPoster.astro';
import PageFabs from '@svelte/sites/PageFabs.svelte';
import { t } from '@utils/i18n';
import { systemToNoun } from '@utils/schemaHelpers';
import PageWithTray from 'src/layouts/PageWithTray.astro';

interface Props {
  siteKey: string;
  pageKey: string;
  steps: string;
}

// By default we want to show the last step of the history,
// but if the user specifies a number, we want to track that much
// history steps back.
const { siteKey, pageKey, steps = "1" } = Astro.params 

// Fetch site data from the api
const siteResponse = await fetch(`${Astro.url.origin}/api/sites/${siteKey}`);
// Fetch page data from the api
const pageResponse = await fetch(
  `${Astro.url.origin}/api/sites/${siteKey}/pages/${pageKey}`,
);

if (!siteResponse.ok || !pageResponse.ok) {
  // If the site or page is not found, redirect to the 404 page
  return Astro.redirect('/404');
}

// Site and page data come from the API - so we can expext them to be
// in the correct format for the client apps.
const site = SiteSchema.parse(await siteResponse.json());
const page = PageSchema.parse(await pageResponse.json());

// Create local helpers for component props
const title = `${page.name} â€“ ${t('site:page.history.title')}`;
const noun = systemToNoun(site.system);
const image = site.avatarURL || site.posterURL || site.backgroundURL;
const historySteps:number =  Number.parseInt(steps) || 1;
---
<PageWithTray title={title} description={site.description} noun={noun} image={image}>
  <div class="content-columns">
    
    <PageHistorySidebar {site} {page} {historySteps} />
  </div>
  <!-- App comps -->
  <SiteTray slot="app-tray" site={site}/>
  <PageFabs pageKey={pageKey} site={site} client:only="svelte" slot="fab-tray" />
  { site.backgroundURL && 
    <BackgroundPoster src={site.backgroundURL} slot="app-background-poster"/>
  }
</PageWithTray>
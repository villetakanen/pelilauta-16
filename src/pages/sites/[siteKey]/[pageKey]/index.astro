---
import { parseSite } from '@schemas/SiteSchema';
import PageApp from '@server/SiteApp/PageApp.astro';
import SiteTray from '@server/SiteApp/SiteTray.astro';
import { toClientEntry } from '@utils/client/entryUtils';
import { systemToNoun } from '@utils/schemaHelpers';
import PageWithTray from 'src/layouts/PageWithTray.astro';

interface Props {
  siteKey: string;
  pageKey: string;
}

const { siteKey, pageKey } = Astro.params;

// Fetch site data from the api
const origin = new URL(Astro.request.url).origin;

// Fetch site data from the api
const siteResponse = await fetch(`${origin}/api/sites/${siteKey}`);
/*/ Fetch page data from the api
const pageResponse = await fetch(
  `${origin}/api/sites/${siteKey}/pages/${pageKey}.json`,
);*/

if (siteResponse.status === 404) {
  return Astro.redirect('/404');
}

const site = parseSite(
  toClientEntry(await siteResponse.json()),
  siteKey || 'mekanismi',
);
const page = pageKey || site.homepage || site.key;
const title = `${site.name}`;
const noun = systemToNoun(site.system);
---
<PageWithTray title={title} description={site.description} noun={noun}>
  <SiteTray slot="app-tray" site={site}/>
  <PageApp site={site} pageKey={page}/>
</PageWithTray>

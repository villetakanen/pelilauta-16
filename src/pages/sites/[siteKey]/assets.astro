---
import { SiteAssetsView } from '@client/SiteApp/assets/SiteAssetsView';
import { parseSite } from '@schemas/SiteSchema';
import SitePoster from '@server/SiteApp/SitePoster.astro';
import SiteTray from '@server/SiteApp/SiteTray.astro';
import { toClientEntry } from '@utils/client/entryUtils';
import { t } from '@utils/i18n';
import PageWithTray from 'src/layouts/PageWithTray.astro';

const { siteKey } = Astro.params;

if (!siteKey) {
  throw new Error('No site key provided');
}

// Fetch site data from the api
const origin = new URL(Astro.request.url).origin;
const siteResponse = await fetch(`${origin}/api/sites/${siteKey}`);
if (siteResponse.status === 404) {
  return Astro.redirect('/404');
}

// Parse the site data and create the site object
const siteData = await siteResponse.json();
const site = parseSite(toClientEntry(siteData), siteKey);
const title = `${site.name} â€“ ${t('site:assets.title')}`;
---
<PageWithTray
  title={title}
  description={site.description}
  image={site.backgroundURL}
>
  <SiteTray slot="app-tray" site={site}/>
  <SiteAssetsView siteKey={site.key} client:only="solid-js" />
  <SitePoster site={site}/>
</PageWithTray>

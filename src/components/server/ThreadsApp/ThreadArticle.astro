---
import type { Thread } from '@schemas/ThreadSchema';
import { markdownToHTML } from '@utils/marked';

interface Props {
  thread: Thread;
}
const { thread } = Astro.props;
const htmlContent = await markdownToHTML(thread.markdownContent || thread.content || '');

const figures =
  thread.images?.map((image) => ({
    src: image.url,
    caption: image.alt,
  })) || [];
---
<article class="column-l">
  <h1 class="downscaled">
    {thread.title}
  </h1>
  { figures.length > 0 && <cn-lightbox images={JSON.stringify(figures)}></cn-lightbox> }
  <section set:html={htmlContent} />
  { thread.tags && thread.tags.length > 0 &&
    <div class="tags flex">
      {thread.tags.map((tag) => (
        <a href={`/tags/${tag}`} class="cn-tag">
          {tag}
        </a>
      ))}
    </div>
  }
</article>
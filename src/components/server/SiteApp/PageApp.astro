---
import { PageFabs } from '@client/sites/PageApp/PageFabs';
import { parsePage } from '@schemas/PageSchema';
import type { Site } from '@schemas/SiteSchema';
import { toClientEntry } from '@utils/client/entryUtils';
import { MarkdownSection } from 'src/components/shared/MarkdownSection';
import PageArticleFooter from './PageArticleFooter.astro';
import PageArticleHeader from './PageArticleHeader.astro';
import PageSidebar from './PageSidebar.astro';

/** SSR Site app */

interface Props {
  pageKey: string;
  site: Site;
}
const { site, pageKey } = Astro.props as Props;
const origin = new URL(Astro.request.url).origin;

// Fetch page data from the api
const pageData = await fetch(
  `${origin}/api/sites/${site.key}/pages/${pageKey}.json`,
).then((res) => res.json());
const page = parsePage(toClientEntry(pageData), pageKey, site.key);
---
<div class="content-columns">
  <article class="column-l elevation-1 p-2">
    <PageArticleHeader page={page} site={site}/>
    <h1>{page.name}</h1>
    { page.markdownContent ? 
      <MarkdownSection content={page.markdownContent || ''} client:only="solid-js"/> : 
      <div set:html={page.htmlContent}></div> 
    }
    <PageArticleFooter page={page} site={site}/>
  </article>
  <PageSidebar site={site} />
  <PageFabs pageKey={pageKey} site={site} client:only="solid-js"/>
</div>
{ site.backgroundURL && <div class="pageBackgroundPoster">
  <img src={site.backgroundURL} alt=""/>
</div> }